Unity汉化流程
1、
  若Mono后端使用dnSpy修改Assembly-CSharp.dll中的文字。
  若il2cpp后端使用MetaDataStringEditor修改global-metada.dat中的文字。
  使用UnityEX或UABE提取并修改游戏资源包内TextAsset文件中的文字(若有)。

****运行游戏查看效果，如显示正常，则无需以下操作。***

2、使用UnityL10nTool查看游戏中字体名称及格式。
3、使用UnityEX提取并替换UnityDefaultFont(通常为*.ttf文件)。

***若无TMP或NGUI字体，则无需以下操作。***

4、
  NGUI使用BMFont制作新字体。
  TMP使用与游戏相进Unity3D引擎版本制作新字体。
5、使用UnityEX查找被替换字体的Material、Texture2D、MonoBehavior三个文件的Path ID#。(前两种使用Search Name模式搜索，MonoBehavior需要使用Search Text模式搜索)
6、在UABE中根据Path ID#查找到相应的三个文件，选择Dump-json方式导出。
7、将制作好的新字体用【5、6】方式导出，并按教程内容修改json文件。
8、将修改后的新字体json导入回资源包，保存。

***运行游戏查看效果。***

Unity localization process
1,
  If Mono backend uses dnSpy to modify the text in Assembly-CSharp.dll.
  If the il2cpp backend uses MetaDataStringEditor to modify the text in global-metada.dat.
  Use UnityEX or UABE to extract and modify the text (if any) in the TextAsset file in the game resource pack.

**** Run the game to see the effect. If the display is normal, the following operations are not required. ***

2. Use UnityL10nTool to view the font name and format in the game.
3. Use UnityEX to extract and replace the UnityDefaultFont (usually a * .ttf file).

*** If there is no TMP or NGUI font, the following operations are not required. ***

4.
  NGUI uses BMFont to make new fonts.
  TMP uses the version of the Unity3D engine that goes with the game to make new fonts.
5. Use UnityEX to find the Path ID # of Material, Texture2D, and MonoBehavior for the replaced font. (The first two types use Search Name mode to search, MonoBehavior needs to use Search Text mode to search)
6. Find the corresponding three files according to Path ID # in UABE, and select Dump-json to export.
7. Export the produced new font in [5, 6] mode, and modify the json file according to the contents of the tutorial.
8. Import the modified new font json back to the resource package and save it.

*** Run the game to see the effect. ***